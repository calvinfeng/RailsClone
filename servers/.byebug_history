c
n
@cat
n
c
params[:cat]
c
params[:cat]
params
@cat
c
params.merge(request.params)
params
request.params
request
@params
params
exit
c
@cat
exit
params[:id]
@cat
exit
@cat
c
params['id']
params[id]
params
params[:id]
Cat.find(1)
@cat
c
match_data.names
match_data
params
c
pattern.match(request.fullpath)
match_data.captures
match_data.capture
match_data
match_test
match_test = pattern.match("/cats/id/1")
match_data.names
match_data
params
c
request.path =~ routes[2].pattern
c
"/cats" =~ routes[0].pattern
routes[1].pattern
routes[2].pattern
request.path
request.path =~ routes[1].pattern
request.path =~ routes[2].pattern
request.path
c
exp = RegEx.new("/^\/cats\/d+/")
 @routes[2].pattern.match(request.path)
 @routes[2].pattern =~ request.path
 @routes[2].pattern ~= request.path
 @routes[2].pattern
request.path ~= @routes[2].pattern 
request.path
@routes[2]
@routes[1]
@routes
c
request.path
request
matched_route
n
@routes
c
match_data.names
match_data
match_dat
request.fullpath
c
match_data
match_data.names
Hash[match_data]
Hash[match)data]
match_data.keys
match_data.names
match_data[0]
match_data
c
pattern
match_data.names
match_data[0]
match_data
params
c
match_data.name
match_data.names
match_data[2]
match_data[1]
match_data
c
match_data[0]
match_data
